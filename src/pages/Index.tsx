import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [activeSection, setActiveSection] = useState('home');

  const scrollToSection = (id: string) => {
    setActiveSection(id);
    document.getElementById(id)?.scrollIntoView({ behavior: 'smooth' });
  };

  return (
    <div className="min-h-screen">
      <nav className="fixed top-0 w-full z-50 glass border-b border-white/10">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2">
              <div className="w-10 h-10 rounded-xl bg-gradient-to-br from-primary to-secondary flex items-center justify-center glow">
                <Icon name="Shield" size={24} className="text-white" />
              </div>
              <span className="text-2xl font-bold gradient-text">SecureVPN</span>
            </div>
            
            <div className="hidden md:flex items-center gap-8">
              {['–ì–ª–∞–≤–Ω–∞—è', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–¢–∞—Ä–∏—Ñ—ã', '–°–µ—Ä–≤–µ—Ä—ã', 'FAQ', '–ü–æ–¥–¥–µ—Ä–∂–∫–∞'].map((item, idx) => (
                <button
                  key={idx}
                  onClick={() => scrollToSection(item.toLowerCase())}
                  className="text-sm font-medium hover:text-primary transition-colors"
                >
                  {item}
                </button>
              ))}
            </div>

            <Button className="bg-gradient-to-r from-primary to-secondary hover:opacity-90 transition-opacity">
              –°–∫–∞—á–∞—Ç—å
            </Button>
          </div>
        </div>
      </nav>

      <section id="–≥–ª–∞–≤–Ω–∞—è" className="relative pt-32 pb-20 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-primary/20 via-secondary/10 to-accent/20 blur-3xl" />
        
        <div className="container mx-auto px-6 relative">
          <div className="max-w-4xl mx-auto text-center animate-fade-in">
            <Badge className="mb-6 bg-primary/20 text-primary border-primary/30">
              üöÄ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è 3.0
            </Badge>
            
            <h1 className="text-6xl md:text-7xl font-bold mb-6 gradient-text">
              –ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ
            </h1>
            
            <p className="text-xl text-muted-foreground mb-8 max-w-2xl mx-auto">
              –ó–∞—â–∏—Ç–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é –≤–æ–µ–Ω–Ω–æ–≥–æ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è AES-256. 
              –ù–∏–∫–∞–∫–∏—Ö –ª–æ–≥–æ–≤, –Ω–∏–∫–∞–∫–∏—Ö –∫–æ–º–ø—Ä–æ–º–∏—Å—Å–æ–≤.
            </p>

            <div className="flex flex-col sm:flex-row gap-4 justify-center mb-12">
              <Button size="lg" className="bg-gradient-to-r from-primary to-secondary text-lg px-8 py-6 hover:scale-105 transition-transform glow">
                <Icon name="Download" className="mr-2" size={20} />
                –°–∫–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
              </Button>
              <Button size="lg" variant="outline" className="text-lg px-8 py-6 glass hover:bg-white/10 transition-colors">
                <Icon name="PlayCircle" className="mr-2" size={20} />
                –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
              </Button>
            </div>

            <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mt-16">
              {[
                { icon: 'Globe', value: '95+', label: '–°—Ç—Ä–∞–Ω' },
                { icon: 'Server', value: '3000+', label: '–°–µ—Ä–≤–µ—Ä–æ–≤' },
                { icon: 'Users', value: '10M+', label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' },
                { icon: 'Zap', value: '10 –ì–±–∏—Ç/—Å', label: '–°–∫–æ—Ä–æ—Å—Ç—å' }
              ].map((stat, idx) => (
                <div key={idx} className="glass rounded-2xl p-6 hover:scale-105 transition-transform">
                  <Icon name={stat.icon} className="mx-auto mb-3 text-primary" size={32} />
                  <div className="text-3xl font-bold gradient-text mb-1">{stat.value}</div>
                  <div className="text-sm text-muted-foreground">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      <section id="–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" className="py-20 bg-card/30">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-5xl font-bold mb-4 gradient-text">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞</h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              –ü–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            {[
              {
                icon: 'Lock',
                title: '–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ AES-256',
                description: '–í–æ–µ–Ω–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∑–∞—â–∏—â–∞–µ—Ç –≤—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞'
              },
              {
                icon: 'ShieldCheck',
                title: 'No-Logs –ø–æ–ª–∏—Ç–∏–∫–∞',
                description: '–ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –∏ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞'
              },
              {
                icon: 'Eye',
                title: 'Kill Switch',
                description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–∏ —Ä–∞–∑—Ä—ã–≤–µ VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è'
              },
              {
                icon: 'Fingerprint',
                title: 'DNS Leak Protection',
                description: '–ó–∞—â–∏—Ç–∞ –æ—Ç —É—Ç–µ—á–µ–∫ DNS –∏ WebRTC –¥–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏'
              },
              {
                icon: 'Network',
                title: 'Split Tunneling',
                description: '–í—ã–±–∏—Ä–∞–π—Ç–µ, –∫–∞–∫–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç VPN, –∞ –∫–∞–∫–∏–µ ‚Äî –Ω–µ—Ç'
              },
              {
                icon: 'Shield',
                title: 'Multi-Hop',
                description: '–î–≤–æ–π–Ω–æ–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã'
              }
            ].map((feature, idx) => (
              <Card key={idx} className="glass border-white/10 hover:border-primary/50 transition-all hover:scale-105 group">
                <CardHeader>
                  <div className="w-16 h-16 rounded-2xl bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center mb-4 group-hover:glow transition-all">
                    <Icon name={feature.icon} size={32} className="text-primary" />
                  </div>
                  <CardTitle className="text-2xl">{feature.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <CardDescription className="text-base">{feature.description}</CardDescription>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="—Ç–∞—Ä–∏—Ñ—ã" className="py-20">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-5xl font-bold mb-4 gradient-text">–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–ª–∞–Ω</h2>
            <p className="text-xl text-muted-foreground">
              30 –¥–Ω–µ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–µ–Ω–µ–≥
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto">
            {[
              {
                name: '–ú–µ—Å—è—Ü',
                price: '990',
                period: '/–º–µ—Å—è—Ü',
                features: ['–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫', '–í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã', '5 —É—Å—Ç—Ä–æ–π—Å—Ç–≤', 'Kill Switch', '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7'],
                popular: false
              },
              {
                name: '–ì–æ–¥',
                price: '290',
                period: '/–º–µ—Å—è—Ü',
                save: '–≠–∫–æ–Ω–æ–º–∏—è 70%',
                features: ['–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫', '–í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã', '10 —É—Å—Ç—Ä–æ–π—Å—Ç–≤', 'Kill Switch', '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', 'Multi-Hop'],
                popular: true
              },
              {
                name: '2 –≥–æ–¥–∞',
                price: '190',
                period: '/–º–µ—Å—è—Ü',
                save: '–≠–∫–æ–Ω–æ–º–∏—è 80%',
                features: ['–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫', '–í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã', '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤', '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Premium', 'VIP –ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP'],
                popular: false
              }
            ].map((plan, idx) => (
              <Card key={idx} className={`glass relative overflow-hidden ${plan.popular ? 'border-primary border-2 scale-105' : 'border-white/10'} hover:scale-110 transition-transform`}>
                {plan.popular && (
                  <div className="absolute top-0 right-0">
                    <Badge className="rounded-bl-2xl rounded-tr-2xl bg-gradient-to-r from-primary to-secondary border-0 px-6 py-2">
                      –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                    </Badge>
                  </div>
                )}
                
                <CardHeader className="text-center pb-8">
                  <CardTitle className="text-2xl mb-2">{plan.name}</CardTitle>
                  {plan.save && (
                    <Badge className="bg-accent/20 text-accent border-accent/30 mb-4">
                      {plan.save}
                    </Badge>
                  )}
                  <div className="flex items-baseline justify-center gap-1">
                    <span className="text-5xl font-bold gradient-text">{plan.price}‚ÇΩ</span>
                    <span className="text-muted-foreground">{plan.period}</span>
                  </div>
                </CardHeader>
                
                <CardContent>
                  <ul className="space-y-4 mb-8">
                    {plan.features.map((feature, fIdx) => (
                      <li key={fIdx} className="flex items-center gap-3">
                        <Icon name="Check" size={20} className="text-primary flex-shrink-0" />
                        <span>{feature}</span>
                      </li>
                    ))}
                  </ul>
                  
                  <Button className={`w-full ${plan.popular ? 'bg-gradient-to-r from-primary to-secondary' : 'glass'} hover:scale-105 transition-transform`}>
                    –í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="—Å–µ—Ä–≤–µ—Ä—ã" className="py-20 bg-card/30">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-5xl font-bold mb-4 gradient-text">–ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å–µ—Ç—å —Å–µ—Ä–≤–µ—Ä–æ–≤</h2>
            <p className="text-xl text-muted-foreground">
              –ë–æ–ª–µ–µ 3000 —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ 95 —Å—Ç—Ä–∞–Ω–∞—Ö –º–∏—Ä–∞
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {[
              { country: '–°–®–ê', servers: 850, flag: 'üá∫üá∏', ping: '15ms' },
              { country: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è', servers: 430, flag: 'üá¨üáß', ping: '22ms' },
              { country: '–ì–µ—Ä–º–∞–Ω–∏—è', servers: 520, flag: 'üá©üá™', ping: '18ms' },
              { country: '–Ø–ø–æ–Ω–∏—è', servers: 340, flag: 'üáØüáµ', ping: '45ms' },
              { country: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è', servers: 210, flag: 'üá¶üá∫', ping: '120ms' },
              { country: '–ö–∞–Ω–∞–¥–∞', servers: 280, flag: 'üá®üá¶', ping: '28ms' },
              { country: '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã', servers: 390, flag: 'üá≥üá±', ping: '20ms' },
              { country: '–°–∏–Ω–≥–∞–ø—É—Ä', servers: 180, flag: 'üá∏üá¨', ping: '65ms' }
            ].map((server, idx) => (
              <Card key={idx} className="glass border-white/10 hover:border-primary/50 transition-all hover:scale-105">
                <CardHeader>
                  <div className="flex items-center justify-between mb-2">
                    <span className="text-4xl">{server.flag}</span>
                    <Badge className="bg-primary/20 text-primary border-primary/30">
                      {server.ping}
                    </Badge>
                  </div>
                  <CardTitle className="text-xl">{server.country}</CardTitle>
                  <CardDescription className="flex items-center gap-2">
                    <Icon name="Server" size={16} />
                    {server.servers} —Å–µ—Ä–≤–µ—Ä–æ–≤
                  </CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section id="faq" className="py-20">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-5xl font-bold mb-4 gradient-text">–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
            <p className="text-xl text-muted-foreground">
              –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–µ–º VPN
            </p>
          </div>

          <Accordion type="single" collapsible className="max-w-3xl mx-auto space-y-4">
            {[
              {
                q: '–ß—Ç–æ —Ç–∞–∫–æ–µ VPN –∏ –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω?',
                a: 'VPN (Virtual Private Network) —Å–æ–∑–¥–∞–µ—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—É–Ω–Ω–µ–ª—å –º–µ–∂–¥—É –≤–∞—à–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º, –∑–∞—â–∏—â–∞—è –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∏ —Å–∫—Ä—ã–≤–∞—è –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π IP-–∞–¥—Ä–µ—Å.'
              },
              {
                q: '–ó–∞–∫–æ–Ω–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ VPN?',
                a: '–î–∞, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ VPN –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–µ–≥–∞–ª—å–Ω–æ –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å—Ç—Ä–∞–Ω –º–∏—Ä–∞. VPN –∏—Å–ø–æ–ª—å–∑—É—é—Ç –º–∏–ª–ª–∏–æ–Ω—ã –ª—é–¥–µ–π –¥–ª—è –∑–∞—â–∏—Ç—ã —Å–≤–æ–µ–π –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.'
              },
              {
                q: '–í–ª–∏—è–µ—Ç –ª–∏ VPN –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞?',
                a: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ VPN —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å. –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ 10 –ì–±–∏—Ç/—Å.'
              },
              {
                q: '–ù–∞ —Å–∫–æ–ª—å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å VPN?',
                a: '–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∞—Ä–∏—Ñ–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –æ—Ç 5 –¥–æ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.'
              },
              {
                q: '–•—Ä–∞–Ω–∏—Ç–µ –ª–∏ –≤—ã –ª–æ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏?',
                a: '–ù–µ—Ç, –º—ã –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–µ–º—Å—è —Å—Ç—Ä–æ–≥–æ–π no-logs –ø–æ–ª–∏—Ç–∏–∫–∏. –ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞—Ö –∏–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö.'
              }
            ].map((faq, idx) => (
              <AccordionItem key={idx} value={`item-${idx}`} className="glass border-white/10 rounded-xl px-6">
                <AccordionTrigger className="text-lg font-semibold hover:text-primary transition-colors">
                  {faq.q}
                </AccordionTrigger>
                <AccordionContent className="text-muted-foreground text-base">
                  {faq.a}
                </AccordionContent>
              </AccordionItem>
            ))}
          </Accordion>
        </div>
      </section>

      <section id="–ø–æ–¥–¥–µ—Ä–∂–∫–∞" className="py-20 bg-card/30">
        <div className="container mx-auto px-6">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-5xl font-bold mb-4 gradient-text">–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</h2>
            <p className="text-xl text-muted-foreground mb-12">
              –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ 24/7
            </p>

            <div className="grid md:grid-cols-3 gap-8">
              {[
                {
                  icon: 'MessageCircle',
                  title: 'Live Chat',
                  description: '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã',
                  action: '–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç'
                },
                {
                  icon: 'Mail',
                  title: 'Email',
                  description: 'support@securevpn.com',
                  action: '–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ'
                },
                {
                  icon: 'BookOpen',
                  title: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
                  description: '–ì–∞–π–¥—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
                  action: '–ü–µ—Ä–µ–π—Ç–∏'
                }
              ].map((support, idx) => (
                <Card key={idx} className="glass border-white/10 hover:border-primary/50 transition-all hover:scale-105">
                  <CardHeader>
                    <div className="w-16 h-16 rounded-2xl bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center mx-auto mb-4">
                      <Icon name={support.icon} size={32} className="text-primary" />
                    </div>
                    <CardTitle className="text-xl">{support.title}</CardTitle>
                    <CardDescription className="text-base">{support.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <Button variant="outline" className="w-full glass hover:bg-white/10">
                      {support.action}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>
      </section>

      <footer className="py-12 border-t border-white/10">
        <div className="container mx-auto px-6">
          <div className="flex flex-col md:flex-row justify-between items-center gap-6">
            <div className="flex items-center gap-2">
              <div className="w-10 h-10 rounded-xl bg-gradient-to-br from-primary to-secondary flex items-center justify-center">
                <Icon name="Shield" size={24} className="text-white" />
              </div>
              <span className="text-2xl font-bold gradient-text">SecureVPN</span>
            </div>

            <div className="flex gap-6 text-sm text-muted-foreground">
              <a href="#" className="hover:text-primary transition-colors">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
              <a href="#" className="hover:text-primary transition-colors">–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a>
              <a href="#" className="hover:text-primary transition-colors">–û –Ω–∞—Å</a>
            </div>

            <div className="flex gap-4">
              {['Twitter', 'Facebook', 'Instagram', 'Youtube'].map((social, idx) => (
                <button key={idx} className="w-10 h-10 rounded-full glass hover:bg-white/10 flex items-center justify-center hover:scale-110 transition-transform">
                  <Icon name={social} size={20} />
                </button>
              ))}
            </div>
          </div>

          <div className="text-center text-muted-foreground text-sm mt-8">
            ¬© 2024 SecureVPN. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;
